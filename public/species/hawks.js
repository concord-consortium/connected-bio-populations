// Generated by CoffeeScript 1.12.5
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  require.register("species/hawks", function(exports, require, module) {
    var BasicAnimal, Hawk, Species, Trait;
    Species = require('models/species');
    BasicAnimal = require('models/agents/basic-animal');
    Trait = require('models/trait');
    Hawk = (function(superClass) {
      extend(Hawk, superClass);

      function Hawk() {
        return Hawk.__super__.constructor.apply(this, arguments);
      }

      Hawk.prototype._viewLayer = 3;

      Hawk.prototype.label = 'Hawk';

      Hawk.prototype.canBeCarried = function() {
        return false;
      };

      return Hawk;

    })(BasicAnimal);
    return module.exports = new Species({
      speciesName: "hawks",
      agentClass: Hawk,
      defs: {
        CHANCE_OF_MUTATION: 0,
        INFO_VIEW_SCALE: 1
      },
      traits: [
        new Trait({
          name: 'speed',
          "default": 80
        }), new Trait({
          name: 'prey',
          "default": [
            {
              name: 'rabbits'
            }
          ]
        }), new Trait({
          name: 'vision distance',
          "default": 150
        }), new Trait({
          name: 'eating distance',
          "default": 50
        }), new Trait({
          name: 'mating distance',
          "default": 50
        }), new Trait({
          name: 'max offspring',
          "default": 3
        }), new Trait({
          name: 'resource consumption rate',
          "default": 10
        }), new Trait({
          name: 'metabolism',
          "default": 0.5
        }), new Trait({
          name: 'wings',
          "default": 0
        })
      ],
      imageRules: [
        {
          name: 'hawk',
          contexts: ['environment'],
          rules: [
            {
              image: {
                path: "images/agents/hawks/hawk.png",
                scale: 0.15,
                anchor: {
                  x: 0.5,
                  y: 0.2
                }
              }
            }
          ]
        }
      ]
    });
  });

}).call(this);
